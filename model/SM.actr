(set-task "sm.task.SM")

(sgp
    :esc t
    :emma t
    ;;:bll 0.5
    :rt 1
    :ans 0.5
    :v t
    
    :visual-num-finsts 20
    :visual-finst-span 20
)

(add-dm
    (goal isa scan)
)
(goal-focus goal)

;;(set-visual-frequency "AA470" .000001)


(start-hand-at-mouse)

;;;
;;; Scan
;;;

(p scan*find-object
    =goal>
        isa scan
    ?visual-location>
        state free
        - buffer requested
    ?visual>
        state free
        buffer empty
==>
    +visual-location>
        isa visual-location
        kind object
        < screen-y 700
        :attended nil
)

(p scan*encode-object
    =goal>
        isa scan
    =visual-location>
        isa visual-location
    ?visual>
        buffer empty
        state free
==>
    +visual>
        isa move-attention
        screen-pos =visual-location
)

(p scan*remember-object
    =goal>
        isa scan
    =visual>
        isa object
        screen-pos =pos
        value =value
==>
    !output! (=value)
    +imaginal>
        isa object
        properties =value
        location =pos
    -imaginal>
    =goal>
        isa scan
)

(p scan*no-more-objects->look-for-button
    =goal>
        isa scan
    ?visual-location>
        state error
==>
    =goal>
        isa move-mouse-start-recall
    +visual-location>
        isa visual-location
        kind oval
        > screen-y 700
    -visual>
)

(p scan*found-a-button->move-to-it
    =goal>
        isa move-mouse-start-recall
    =visual-location>
        isa visual-location
    ?visual>
        state free
    ?manual>
        state   free
==>
    =goal>
        isa click-mouse-start-recall
    =visual-location>
    +visual>
        isa move-attention
        screen-pos =visual-location
    +manual>
        isa move-cursor
        loc =visual-location
)
(p scan*click-mouse->go-to-recall
    =goal>
        isa click-mouse-start-recall
    ?manual>
        state free
==>
    -retrieval>
    =goal>
        isa wait
    +manual>
        isa click-mouse
    -visual>
    -visual-location>
)
(p wait
    =goal>
        isa wait
==>
    =goal>
    -visual>
    -visual-location>
)

;;===========================



;;;
;;; Recall
;;;

(p recall*find-targets
    =goal>
        isa recall
    ?visual-location>
        state free
        - buffer requested
    ?visual>
        state free
        buffer empty
==>
    +visual-location>
        isa visual-location
        kind object
        > screen-y 700
        :attended nil
        screen-x lowest
)

(p recall*found-target-location->move-to-it
    =goal>
        isa recall
    =visual-location>
        isa visual-location
    ?visual>
        state free
    ?manual>
        state free
==>
    +visual>
        isa move-attention
        screen-pos =visual-location
    +manual>
        isa move-cursor
        loc =visual-location
    =goal>
        isa click-target
)

(p recall*found-target-location->click-mouse
    =goal>
        isa click-target
    ?manual>
        state free
    =visual>
        isa object
        value =value
==>
    !output! (=value)
    +imaginal>
        properties =value
    -retrieval>
    =goal>
        isa recalling
    +manual>
        isa click-mouse
)


(p recall*found-target->recall-object-location
    =goal>
        isa recalling
    =imaginal>
        properties =value
    ?retrieval>
        state free
        buffer empty
==>
    +retrieval>
        isa object
        properties =value
    =goal>
        isa recalling
)     

(p recall*recalled
    =goal>
        isa recalling
    =retrieval>
        isa object
        properties =value
        location =loc
    ?visual>
        buffer empty
        state   free
    ?manual>
        state   free
==>
    =goal>
        isa click-recalled-position
    +visual>
        isa move-attention
        screen-pos =loc
    +manual>
        isa move-cursor
        loc =loc
)

(p recall*failed
    =goal>
        isa recalling
    ?retrieval>
        state error
==>
    -retrieval>
    =goal>
        isa move-center
    +visual-location>
        isa visual-location
        kind cross
        ;;
)
(p recall*failed->move-cursur-to-center
    =goal>
        isa move-center
    =visual-location>
        isa visual-location
    ?visual>
        buffer empty
        state free
    ?manual>
        state free
==>
    +manual>
        isa move-cursor
        loc =visual-location
    =goal>
        isa click-recalled-position
    +visual>
        isa move-attention
        screen-pos =visual-location
        ;;
)

(p recall*click-recalled-position
    =goal>
        isa click-recalled-position
    ?manual>
        state free
==>
    -retrieval>
    =goal>
        isa recall
    +manual>
        isa click-mouse
    -visual>
    -visual-location>
)

(p recall*no-more-objects->look-for-button
    =goal>
        isa recall
    ?visual-location>
        - buffer requested
        state error
==>
    =goal>
        isa move-mouse-start-scan
    +visual-location>
        isa visual-location
        kind oval
        > screen-y 700
    -visual>
)

(p recall*found-a-button->move-to-it
    =goal>
        isa move-mouse-start-scan
    =visual-location>
        isa visual-location
    ?visual>
        state free
    ?manual>
        state   free
==>
    =goal>
        isa click-mouse-start-scan
    =visual-location>
    +visual>
        isa move-attention
        screen-pos =visual-location
    +manual>
        isa move-cursor
        loc =visual-location
)
(p recall*click-mouse->go-to-scan
    =goal>
        isa click-mouse-start-scan
    ?manual>
        state free
==>
    -retrieval>
    =goal>
        isa scan
    +manual>
        isa click-mouse
    -visual>
    -visual-location>
)


